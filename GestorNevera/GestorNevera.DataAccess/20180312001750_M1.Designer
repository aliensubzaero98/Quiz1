// <auto-generated />
using GestorEstudiantil.DataAcces;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GestorEstudiantil.DataAcces.Migrations
{
    [DbContext(typeof(GestorNeveraDBContext))]
    [Migration("20180312001750_M1")]
    partial class M1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("GestorNevera.models.Materiales", b =>
                {
                    b.Property<int>("MaterialesId")
                        .ValueGeneratedOnAdd();

                    

                    b.Property<int>("PrecioId");

                    b.HasKey("PrecioId");

                });

            modelBuilder.Entity("GestorNevera.models.Nevera", b =>
                {
                    b.Property<string>("NeveraId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Marca");

                    b.Property<Ilist>("Serie");

                    
                });

            modelBuilder.Entity("GestorNevera.models.Precio", b =>
                {
                    b.Property<int>("PrecioId")
                        .ValueGeneratedOnAdd();

                    b.Property<Ilist>("Materiales");

                    

             
                });

            modelBuilder.Entity("GestorNevera.models.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NombreMateria");

                    b.Property<Ilist>("Capacidad");

                    b.Property<Ilist>("Precio");
                });

            modelBuilder.Entity("GestorNevera.models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NombreCategoria");
					b.Property<Ilist>("Cpacidad");
					b.Property<Ilist>("Precio");

                    
                });

            modelBuilder.Entity("GestorNevera.models.Capacidad", b =>
                {
                    b.Property<int>("CapacidadId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MardaId");

                    b.Property<int>("CategoriaId");

					b.Property<Ilist>("PrecioAsociado");

                    
                });

            modelBuilder.Entity("GestorNevera.models.Materiales", b =>
                {
                    b.HasOne("GestorNevera.models.Precio", "Precio")
                        .WithMany("Materiales")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestorNevera.models.Precio", b =>
                {
                    b.HasOne("GestorNevera.models.Nevera", "Nevera")
                        .WithMany("Marca")
                        .HasForeignKey("NeveraId1");

                    b.HasOne("GestorNevera.models.Capacidad", "Capacidad")
                        .WithMany("Precio")
                        .HasForeignKey("Precio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestorNevera.models.Capacidad", b =>
                {
                    b.HasOne("GestorNevera.models.Marca", "Marca")
                        .WithMany("Marca")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestorNever.models.Categoria", "Categoria")
                        .WithMany("Marca")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
